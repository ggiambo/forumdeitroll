/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables;


import com.forumdeitroll.persistence.jooq.Fdtsucker;
import com.forumdeitroll.persistence.jooq.tables.records.PvtRecipientRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PvtRecipient extends TableImpl<PvtRecipientRecord> {

	private static final long serialVersionUID = 1566064014;

	/**
	 * The reference instance of <code>fdtsucker.pvt_recipient</code>
	 */
	public static final PvtRecipient PVT_RECIPIENT = new PvtRecipient();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PvtRecipientRecord> getRecordType() {
		return PvtRecipientRecord.class;
	}

	/**
	 * The column <code>fdtsucker.pvt_recipient.pvt_id</code>.
	 */
	public final TableField<PvtRecipientRecord, Integer> PVT_ID = createField("pvt_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_recipient.recipient</code>.
	 */
	public final TableField<PvtRecipientRecord, String> RECIPIENT = createField("recipient", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_recipient.read</code>.
	 */
	public final TableField<PvtRecipientRecord, Integer> READ = createField("read", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>fdtsucker.pvt_recipient.deleted</code>.
	 */
	public final TableField<PvtRecipientRecord, Integer> DELETED = createField("deleted", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>fdtsucker.pvt_recipient</code> table reference
	 */
	public PvtRecipient() {
		this("pvt_recipient", null);
	}

	/**
	 * Create an aliased <code>fdtsucker.pvt_recipient</code> table reference
	 */
	public PvtRecipient(String alias) {
		this(alias, PVT_RECIPIENT);
	}

	private PvtRecipient(String alias, Table<PvtRecipientRecord> aliased) {
		this(alias, aliased, null);
	}

	private PvtRecipient(String alias, Table<PvtRecipientRecord> aliased, Field<?>[] parameters) {
		super(alias, Fdtsucker.FDTSUCKER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvtRecipient as(String alias) {
		return new PvtRecipient(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PvtRecipient rename(String name) {
		return new PvtRecipient(name, null);
	}
}
