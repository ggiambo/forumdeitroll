/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables;


import com.forumdeitroll.persistence.jooq.Fdtsucker;
import com.forumdeitroll.persistence.jooq.Keys;
import com.forumdeitroll.persistence.jooq.tables.records.AdsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ads extends TableImpl<AdsRecord> {

	private static final long serialVersionUID = 1066128020;

	/**
	 * The reference instance of <code>fdtsucker.ads</code>
	 */
	public static final Ads ADS = new Ads();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AdsRecord> getRecordType() {
		return AdsRecord.class;
	}

	/**
	 * The column <code>fdtsucker.ads.id</code>.
	 */
	public final TableField<AdsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.ads.title</code>.
	 */
	public final TableField<AdsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.ads.visurl</code>.
	 */
	public final TableField<AdsRecord, String> VISURL = createField("visurl", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.ads.content</code>.
	 */
	public final TableField<AdsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>fdtsucker.ads</code> table reference
	 */
	public Ads() {
		this("ads", null);
	}

	/**
	 * Create an aliased <code>fdtsucker.ads</code> table reference
	 */
	public Ads(String alias) {
		this(alias, ADS);
	}

	private Ads(String alias, Table<AdsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ads(String alias, Table<AdsRecord> aliased, Field<?>[] parameters) {
		super(alias, Fdtsucker.FDTSUCKER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AdsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ADS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AdsRecord> getPrimaryKey() {
		return Keys.KEY_ADS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AdsRecord>> getKeys() {
		return Arrays.<UniqueKey<AdsRecord>>asList(Keys.KEY_ADS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ads as(String alias) {
		return new Ads(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ads rename(String name) {
		return new Ads(name, null);
	}
}
