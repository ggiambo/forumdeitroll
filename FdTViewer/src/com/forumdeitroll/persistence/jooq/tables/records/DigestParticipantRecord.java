/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables.records;


import com.forumdeitroll.persistence.jooq.tables.DigestParticipant;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DigestParticipantRecord extends TableRecordImpl<DigestParticipantRecord> implements Record2<Integer, String> {

	private static final long serialVersionUID = -165698481;

	/**
	 * Setter for <code>fdtsucker.digest_participant.threadId</code>.
	 */
	public DigestParticipantRecord setThreadid(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.digest_participant.threadId</code>.
	 */
	public Integer getThreadid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>fdtsucker.digest_participant.author</code>.
	 */
	public DigestParticipantRecord setAuthor(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.digest_participant.author</code>.
	 */
	public String getAuthor() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return DigestParticipant.DIGEST_PARTICIPANT.THREADID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return DigestParticipant.DIGEST_PARTICIPANT.AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getThreadid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DigestParticipantRecord value1(Integer value) {
		setThreadid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DigestParticipantRecord value2(String value) {
		setAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DigestParticipantRecord values(Integer value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DigestParticipantRecord
	 */
	public DigestParticipantRecord() {
		super(DigestParticipant.DIGEST_PARTICIPANT);
	}

	/**
	 * Create a detached, initialised DigestParticipantRecord
	 */
	public DigestParticipantRecord(Integer threadid, String author) {
		super(DigestParticipant.DIGEST_PARTICIPANT);

		setValue(0, threadid);
		setValue(1, author);
	}
}
