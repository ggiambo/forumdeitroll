/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables.records;


import com.forumdeitroll.persistence.jooq.tables.Logins;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoginsRecord extends TableRecordImpl<LoginsRecord> implements Record3<String, String, Timestamp> {

	private static final long serialVersionUID = -1167289889;

	/**
	 * Setter for <code>fdtsucker.logins.nick</code>.
	 */
	public LoginsRecord setNick(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.logins.nick</code>.
	 */
	public String getNick() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>fdtsucker.logins.loginKey</code>.
	 */
	public LoginsRecord setLoginkey(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.logins.loginKey</code>.
	 */
	public String getLoginkey() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>fdtsucker.logins.tstamp</code>.
	 */
	public LoginsRecord setTstamp(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.logins.tstamp</code>.
	 */
	public Timestamp getTstamp() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Logins.LOGINS.NICK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Logins.LOGINS.LOGINKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Logins.LOGINS.TSTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getNick();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getLoginkey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getTstamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoginsRecord value1(String value) {
		setNick(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoginsRecord value2(String value) {
		setLoginkey(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoginsRecord value3(Timestamp value) {
		setTstamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoginsRecord values(String value1, String value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LoginsRecord
	 */
	public LoginsRecord() {
		super(Logins.LOGINS);
	}

	/**
	 * Create a detached, initialised LoginsRecord
	 */
	public LoginsRecord(String nick, String loginkey, Timestamp tstamp) {
		super(Logins.LOGINS);

		setValue(0, nick);
		setValue(1, loginkey);
		setValue(2, tstamp);
	}
}
