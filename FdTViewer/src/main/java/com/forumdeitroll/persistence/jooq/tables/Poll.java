/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables;


import com.forumdeitroll.persistence.jooq.Fdtsucker;
import com.forumdeitroll.persistence.jooq.Keys;
import com.forumdeitroll.persistence.jooq.tables.records.PollRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Poll extends TableImpl<PollRecord> {

	private static final long serialVersionUID = -463000690;

	/**
	 * The reference instance of <code>fdtsucker.poll</code>
	 */
	public static final Poll POLL = new Poll();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PollRecord> getRecordType() {
		return PollRecord.class;
	}

	/**
	 * The column <code>fdtsucker.poll.id</code>.
	 */
	public final TableField<PollRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.poll.title</code>.
	 */
	public final TableField<PollRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.poll.text</code>.
	 */
	public final TableField<PollRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.poll.author</code>.
	 */
	public final TableField<PollRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.poll.creationDate</code>.
	 */
	public final TableField<PollRecord, Timestamp> CREATIONDATE = createField("creationDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.poll.updateDate</code>.
	 */
	public final TableField<PollRecord, Timestamp> UPDATEDATE = createField("updateDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>fdtsucker.poll</code> table reference
	 */
	public Poll() {
		this("poll", null);
	}

	/**
	 * Create an aliased <code>fdtsucker.poll</code> table reference
	 */
	public Poll(String alias) {
		this(alias, POLL);
	}

	private Poll(String alias, Table<PollRecord> aliased) {
		this(alias, aliased, null);
	}

	private Poll(String alias, Table<PollRecord> aliased, Field<?>[] parameters) {
		super(alias, Fdtsucker.FDTSUCKER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PollRecord, Integer> getIdentity() {
		return Keys.IDENTITY_POLL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PollRecord> getPrimaryKey() {
		return Keys.KEY_POLL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PollRecord>> getKeys() {
		return Arrays.<UniqueKey<PollRecord>>asList(Keys.KEY_POLL_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Poll as(String alias) {
		return new Poll(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Poll rename(String name) {
		return new Poll(name, null);
	}
}
