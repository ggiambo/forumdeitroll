/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq;


import com.forumdeitroll.persistence.jooq.tables.Ads;
import com.forumdeitroll.persistence.jooq.tables.Messages;
import com.forumdeitroll.persistence.jooq.tables.Notification;
import com.forumdeitroll.persistence.jooq.tables.PvtContent;
import com.forumdeitroll.persistence.jooq.tables.Quotes;
import com.forumdeitroll.persistence.jooq.tables.records.AdsRecord;
import com.forumdeitroll.persistence.jooq.tables.records.MessagesRecord;
import com.forumdeitroll.persistence.jooq.tables.records.NotificationRecord;
import com.forumdeitroll.persistence.jooq.tables.records.PvtContentRecord;
import com.forumdeitroll.persistence.jooq.tables.records.QuotesRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>fdtsucker</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AdsRecord, Integer> IDENTITY_ADS = Identities0.IDENTITY_ADS;
	public static final Identity<MessagesRecord, Integer> IDENTITY_MESSAGES = Identities0.IDENTITY_MESSAGES;
	public static final Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = Identities0.IDENTITY_NOTIFICATION;
	public static final Identity<PvtContentRecord, Integer> IDENTITY_PVT_CONTENT = Identities0.IDENTITY_PVT_CONTENT;
	public static final Identity<QuotesRecord, Integer> IDENTITY_QUOTES = Identities0.IDENTITY_QUOTES;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AdsRecord> KEY_ADS_PRIMARY = UniqueKeys0.KEY_ADS_PRIMARY;
	public static final UniqueKey<MessagesRecord> KEY_MESSAGES_PRIMARY = UniqueKeys0.KEY_MESSAGES_PRIMARY;
	public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_PRIMARY;
	public static final UniqueKey<PvtContentRecord> KEY_PVT_CONTENT_PRIMARY = UniqueKeys0.KEY_PVT_CONTENT_PRIMARY;
	public static final UniqueKey<QuotesRecord> KEY_QUOTES_PRIMARY = UniqueKeys0.KEY_QUOTES_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AdsRecord, Integer> IDENTITY_ADS = createIdentity(Ads.ADS, Ads.ADS.ID);
		public static Identity<MessagesRecord, Integer> IDENTITY_MESSAGES = createIdentity(Messages.MESSAGES, Messages.MESSAGES.ID);
		public static Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = createIdentity(Notification.NOTIFICATION, Notification.NOTIFICATION.ID);
		public static Identity<PvtContentRecord, Integer> IDENTITY_PVT_CONTENT = createIdentity(PvtContent.PVT_CONTENT, PvtContent.PVT_CONTENT.ID);
		public static Identity<QuotesRecord, Integer> IDENTITY_QUOTES = createIdentity(Quotes.QUOTES, Quotes.QUOTES.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AdsRecord> KEY_ADS_PRIMARY = createUniqueKey(Ads.ADS, Ads.ADS.ID);
		public static final UniqueKey<MessagesRecord> KEY_MESSAGES_PRIMARY = createUniqueKey(Messages.MESSAGES, Messages.MESSAGES.ID);
		public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = createUniqueKey(Notification.NOTIFICATION, Notification.NOTIFICATION.ID);
		public static final UniqueKey<PvtContentRecord> KEY_PVT_CONTENT_PRIMARY = createUniqueKey(PvtContent.PVT_CONTENT, PvtContent.PVT_CONTENT.ID);
		public static final UniqueKey<QuotesRecord> KEY_QUOTES_PRIMARY = createUniqueKey(Quotes.QUOTES, Quotes.QUOTES.ID);
	}
}
