/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables.records;


import com.forumdeitroll.persistence.jooq.tables.Poll;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PollRecord extends UpdatableRecordImpl<PollRecord> implements Record6<Integer, String, String, String, Timestamp, Timestamp> {

	private static final long serialVersionUID = 408062312;

	/**
	 * Setter for <code>fdtsucker.poll.id</code>.
	 */
	public PollRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>fdtsucker.poll.title</code>.
	 */
	public PollRecord setTitle(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>fdtsucker.poll.text</code>.
	 */
	public PollRecord setText(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.text</code>.
	 */
	public String getText() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>fdtsucker.poll.author</code>.
	 */
	public PollRecord setAuthor(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.author</code>.
	 */
	public String getAuthor() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>fdtsucker.poll.creationDate</code>.
	 */
	public PollRecord setCreationdate(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.creationDate</code>.
	 */
	public Timestamp getCreationdate() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>fdtsucker.poll.updateDate</code>.
	 */
	public PollRecord setUpdatedate(Timestamp value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.poll.updateDate</code>.
	 */
	public Timestamp getUpdatedate() {
		return (Timestamp) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, Timestamp, Timestamp> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, Timestamp, Timestamp> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Poll.POLL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Poll.POLL.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Poll.POLL.TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Poll.POLL.AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Poll.POLL.CREATIONDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return Poll.POLL.UPDATEDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getCreationdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getUpdatedate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value2(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value3(String value) {
		setText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value4(String value) {
		setAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value5(Timestamp value) {
		setCreationdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord value6(Timestamp value) {
		setUpdatedate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PollRecord values(Integer value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PollRecord
	 */
	public PollRecord() {
		super(Poll.POLL);
	}

	/**
	 * Create a detached, initialised PollRecord
	 */
	public PollRecord(Integer id, String title, String text, String author, Timestamp creationdate, Timestamp updatedate) {
		super(Poll.POLL);

		setValue(0, id);
		setValue(1, title);
		setValue(2, text);
		setValue(3, author);
		setValue(4, creationdate);
		setValue(5, updatedate);
	}
}
