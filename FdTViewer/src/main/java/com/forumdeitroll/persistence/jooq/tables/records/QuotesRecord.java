/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables.records;


import com.forumdeitroll.persistence.jooq.tables.Quotes;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuotesRecord extends UpdatableRecordImpl<QuotesRecord> implements Record3<Integer, String, String> {

	private static final long serialVersionUID = -558719978;

	/**
	 * Setter for <code>fdtsucker.quotes.id</code>.
	 */
	public QuotesRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.quotes.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>fdtsucker.quotes.nick</code>.
	 */
	public QuotesRecord setNick(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.quotes.nick</code>.
	 */
	public String getNick() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>fdtsucker.quotes.content</code>.
	 */
	public QuotesRecord setContent(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>fdtsucker.quotes.content</code>.
	 */
	public String getContent() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Quotes.QUOTES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Quotes.QUOTES.NICK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Quotes.QUOTES.CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNick();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuotesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuotesRecord value2(String value) {
		setNick(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuotesRecord value3(String value) {
		setContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuotesRecord values(Integer value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QuotesRecord
	 */
	public QuotesRecord() {
		super(Quotes.QUOTES);
	}

	/**
	 * Create a detached, initialised QuotesRecord
	 */
	public QuotesRecord(Integer id, String nick, String content) {
		super(Quotes.QUOTES);

		setValue(0, id);
		setValue(1, nick);
		setValue(2, content);
	}
}
