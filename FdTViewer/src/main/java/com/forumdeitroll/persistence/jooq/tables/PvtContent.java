/**
 * This class is generated by jOOQ
 */
package com.forumdeitroll.persistence.jooq.tables;


import com.forumdeitroll.persistence.jooq.Fdtsucker;
import com.forumdeitroll.persistence.jooq.Keys;
import com.forumdeitroll.persistence.jooq.tables.records.PvtContentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PvtContent extends TableImpl<PvtContentRecord> {

	private static final long serialVersionUID = 778641769;

	/**
	 * The reference instance of <code>fdtsucker.pvt_content</code>
	 */
	public static final PvtContent PVT_CONTENT = new PvtContent();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PvtContentRecord> getRecordType() {
		return PvtContentRecord.class;
	}

	/**
	 * The column <code>fdtsucker.pvt_content.id</code>.
	 */
	public final TableField<PvtContentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.sender</code>.
	 */
	public final TableField<PvtContentRecord, String> SENDER = createField("sender", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.content</code>.
	 */
	public final TableField<PvtContentRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.senddate</code>.
	 */
	public final TableField<PvtContentRecord, Timestamp> SENDDATE = createField("senddate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.subject</code>.
	 */
	public final TableField<PvtContentRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.replyTo</code>.
	 */
	public final TableField<PvtContentRecord, Integer> REPLYTO = createField("replyTo", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>fdtsucker.pvt_content.deleted</code>.
	 */
	public final TableField<PvtContentRecord, Integer> DELETED = createField("deleted", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>fdtsucker.pvt_content</code> table reference
	 */
	public PvtContent() {
		this("pvt_content", null);
	}

	/**
	 * Create an aliased <code>fdtsucker.pvt_content</code> table reference
	 */
	public PvtContent(String alias) {
		this(alias, PVT_CONTENT);
	}

	private PvtContent(String alias, Table<PvtContentRecord> aliased) {
		this(alias, aliased, null);
	}

	private PvtContent(String alias, Table<PvtContentRecord> aliased, Field<?>[] parameters) {
		super(alias, Fdtsucker.FDTSUCKER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PvtContentRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PVT_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PvtContentRecord> getPrimaryKey() {
		return Keys.KEY_PVT_CONTENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PvtContentRecord>> getKeys() {
		return Arrays.<UniqueKey<PvtContentRecord>>asList(Keys.KEY_PVT_CONTENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvtContent as(String alias) {
		return new PvtContent(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PvtContent rename(String name) {
		return new PvtContent(name, null);
	}
}
